# Setup

# Use mambaforge instead of anaconda/miniconda
https://conda-forge.org/miniforge/

# Or if you already have anaconda or miniconda, 
# use libmamba, which seems to handle solving the environment better
conda install -n base conda-libmamba-solver
conda config --set solver libmamba

# Windows with GPU
conda create --name torch python=3.11 plotly::plotly pandas plotnine scikit-learn statsmodels seaborn ipython ipykernel numpy matplotlib pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia
pip install graphviz

# Window without GPU
conda create --name torch python=3.11 plotly::plotly pandas plotnine scikit-learn statsmodels seaborn ipython ipykernel numpy matplotlib pytorch torchvision torchaudio cpuonly -c pytorch
pip install graphviz

# MacOS (Apple silicon)
conda create --name torch plotly::plotly pandas plotnine scikit-learn statsmodels seaborn yaml pyyaml nbclient nbformat ipykernel numpy matplotlib pytorch::pytorch torchvision torchaudio -c pytorch
pip install graphviz
python -m ipykernel install --user

# Linux (needed libmamba to solve this environment)
conda create --name pytorch python=3.11 pandas plotnine scikit-learn statsmodels seaborn yaml pyyaml nbclient nbformat ipython ipykernel numpy matplotlib pytorch torchvision torchaudio cpuonly -c pytorch
pip install graphviz

# For VSCode rendering with Quarto
conda install yaml pyyaml nbclient nbformat ipykernel

# For "traitlets - ERROR - Kernel died while waiting for execute reply." error
python -m ipykernel install --user

# Conda envs with quarto
# https://thedatasavvycorner.com/blogs/08-quarto-conda-env

pip install micrograd

# Hellbender
conda create --name pytorch python=3.11
conda install yaml pyyaml nbclient nbformat ipykernel
conda install plotnine scikit-learn statsmodels seaborn numpy matplotlib plotly::plotly pandas  
pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
python -m ipykernel install --user --name=pytorch

